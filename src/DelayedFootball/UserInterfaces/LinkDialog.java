package DelayedFootball.UserInterfaces;

import DelayedFootball.Manager;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Kyle
 */
public class LinkDialog extends javax.swing.JDialog {

    private static final String QUERY_LINKS = "SELECT Nickname, Link FROM Links";
    private static final String INSERT_LINK = "INSERT INTO Links(Nickname, Link) VALUES(?, ?)";
    private static final String DELETE_LINK = "DELETE FROM Links WHERE Nickname = ?";

    private PreparedStatement queryLinks;
    private PreparedStatement insertLink;
    private PreparedStatement deleteLink;

    private DefaultListModel lm1;
    private HashMap<String, String> nameLinks;
    private static Connection con;
    private static Manager manager;

    public LinkDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        lm1 = new DefaultListModel();
        linkList.setModel(lm1);
        nameLinks = new HashMap<String, String>();

        try {
            con = DriverManager.getConnection("jdbc:sqlite:Links.db");
            queryLinks = con.prepareStatement(QUERY_LINKS);
            insertLink = con.prepareStatement(INSERT_LINK);
            deleteLink = con.prepareStatement(DELETE_LINK);
            loadLinks();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public LinkDialog(java.awt.Frame parent, boolean modal, Manager manager){
        this(parent, modal);
        this.manager = manager;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        delaySelector = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        linkList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Please Select Delay Below:");

        delaySelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55", "60", "65", "70", "75", "80", "85", "90" }));
        delaySelector.setSelectedItem("45");

        linkList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        linkList.setFocusable(false);
        linkList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linkListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(linkList);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Select a Link From Below:");

        jButton1.setText("New..");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonPressed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonPressed(evt);
            }
        });

        jButton3.setText("Launch");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Launch(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 172, Short.MAX_VALUE)
                .addComponent(delaySelector, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(delaySelector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonPressed

        NewLinkPanel newLink = new NewLinkPanel();
        try {

            int buttonPress = JOptionPane.showConfirmDialog(this, newLink, "Create a New Fantasycast Link", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

            if (buttonPress == JOptionPane.OK_OPTION) {
                if (!nameLinks.containsKey(newLink.getNicknameText())) {

                    lm1.addElement(newLink.getNicknameText());
                    nameLinks.put(newLink.getNicknameText(), newLink.getURLText());

                    insertLink.setString(1, newLink.getNicknameText());
                    insertLink.setString(2, newLink.getURLText());
                    insertLink.execute();

                } else {
                    JOptionPane.showConfirmDialog(this, "This name already exists, please try another", "This link already exists!", JOptionPane.PLAIN_MESSAGE);
                }
            }
        } catch (Exception e) {

        }


    }//GEN-LAST:event_newButtonPressed

    private void deleteButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonPressed
        if (linkList.getSelectedValue() != null) {
            try {

                int buttonPress = JOptionPane.showConfirmDialog(this, "Delete " + linkList.getSelectedValue() + "?", "Confirm Delete", JOptionPane.OK_CANCEL_OPTION);

                if (buttonPress == JOptionPane.OK_OPTION) {
                    String remove = linkList.getSelectedValue();
                    lm1.remove(linkList.getSelectedIndex());
                    nameLinks.remove(remove);

                    deleteLink.setString(1, remove);
                    deleteLink.execute();
                }
            } catch (Exception ex) {
                System.out.println(ex);
            }
        }

    }//GEN-LAST:event_deleteButtonPressed

    private void Launch(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Launch
        if (linkList.getSelectedValue() != null) {
            manager.setUrl(nameLinks.get(linkList.getSelectedValue()));
            manager.setDelay(Integer.parseInt(delaySelector.getSelectedItem().toString()));
            try {
                con.close();
                deleteLink.close();
                insertLink.close();
                queryLinks.close();
            } catch (SQLException ex) {
            }
            this.setVisible(false);
            this.dispose();
        }
    }//GEN-LAST:event_Launch

    private void linkListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkListMouseClicked
        if (evt.getClickCount() == 2) {
            if (linkList.getSelectedValue() != null) {
                manager.setUrl(nameLinks.get(linkList.getSelectedValue()));
                manager.setDelay(Integer.parseInt(delaySelector.getSelectedItem().toString()));
                this.setVisible(false);
                this.dispose();
            }
        }
    }//GEN-LAST:event_linkListMouseClicked

    private void loadLinks() throws FileNotFoundException, IOException {
        lm1.clear();

        try {
            ResultSet links = queryLinks.executeQuery();

            while (links.next()) {
                lm1.addElement(links.getString(1));
                nameLinks.put(links.getString(1), links.getString(2));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LinkDialog dialog = new LinkDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        try {
                            con.close();
                            manager.close();
                        } catch (SQLException ex) {
                        }
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> delaySelector;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> linkList;
    // End of variables declaration//GEN-END:variables
}
